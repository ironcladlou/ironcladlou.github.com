pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
max_critters=3
debug_mode=false

-- these are useful symbols
-- which correspond to the
-- buttons.
b_left=0; b_right=1;
b_up=2; b_down=3; b_a=4

-- compass directions
d_e=1; d_ne=2; d_n=3; d_nw=4
d_w=5; d_sw=6; d_s=7; d_se=8

player={
 speed=0.5,
 pos={x=0,y=0}, -- position
 v={x=0,y=0},   -- velocity
 d={x=1,y=0},   -- direction
 anims={
  move={
   {f=17,l=4,s=5,h=false},--e
   {f=2, l=2,s=5,h=false},--ne
   {f=2, l=2,s=5,h=false},--n
   {f=17,l=4,s=5,h=true },--nw
   {f=17,l=4,s=5,h=true },--w
   {f=4, l=2,s=5,h=false},--sw
   {f=4, l=2,s=5,h=false},--s
   {f=17,l=4,s=5,h=false},--se
  },
  idle={
   {f=1, l=1,s=5,h=false},--e
   {f=2, l=1,s=5,h=false},--ne
   {f=2, l=1,s=5,h=false},--n
   {f=1, l=1,s=5,h=true },--nw
   {f=1, l=1,s=5,h=true },--w
   {f=4, l=1,s=5,h=false},--sw
   {f=4, l=1,s=5,h=false},--s
   {f=17,l=1,s=5,h=false},--se
  }
 }
}

bullet={
 speed=3,
 pos={x=0,y=0},
 d={x=0,y=0},
 v={x=0,y=0},
 hitbox={x=3,y=4,w=2,h=1},
 anims={
  l={f=11,l=1,s=5,h=false},
  r={f=11,l=1,s=5,h=true },
  u={f=11,l=1,s=5,h=false},
  d={f=11,l=1,s=5,h=true },
 }
}

deer=function()
 return {
  name="deer",
  speed=1,
  pos={x=0,y=0},
  v={x=0,y=0},
  hitbox={x=1,y=2,w=6,h=6},
  anims={
   move={
    l={f=33,l=4,s=5,h=false},
    r={f=33,l=4,s=5,h=true },
    u={f=49,l=2,s=5,h=false},
    d={f=51,l=2,s=5,h=false},
   },
   dead={f=27,l=3,s=5,h=false},
  }
 }
end

rabbit=function()
 return {
  name="rabbit",
  speed=1.5,
  pos={x=0,y=0},
  v={x=0,y=0},
  hitbox={x=2,y=3,w=4,h=4},
  anims={
   move={
    l={f=43,l=4,s=5,h=false},
    r={f=43,l=4,s=5,h=true },
    u={f=61,l=2,s=5,h=false},
    d={f=59,l=2,s=5,h=false},
   },
   dead={f=27,l=3,s=5,h=false},
  }
 }
end

all_critters={deer,rabbit}

function _init()
  -- set up the player
  player.pos={x=16,y=16}
  player.d={x=1,y=0}
  player.v={x=0,y=0}
  
  -- create the player's only
  -- shot
  bullet.active=false
  
  -- this keeps track of all
  -- critters, alive or dead
  critters=make_critters(max_critters)
end

function _update()
  -- check for buttons and
  -- if the player's trying
  -- to move, set the new
  -- direction.
  local pv={x=0,y=0}
  if(btn(b_left)) pv.x=-1
  if(btn(b_right)) pv.x=1
  if(btn(b_up)) pv.y=-1
  if(btn(b_down)) pv.y=1
  -- only re-set the direction
  -- if some movement is
  -- detected.
  if pv.x!=0 or pv.y!=0 then
    player.d={x=pv.x,y=pv.y}  
  end
  -- update the player velocity
  -- and position.
  player.v=v_mults(pv, player.speed)
  player.pos=v_addv(player.pos, player.v)

  -- detect shooting action
  -- and create a bullet if
  -- necessary.
  if btn(b_a) then
    -- only allow one bullet
    -- at a time.
    if not bullet.active then
      bullet.active=true
      bullet.pos={x=player.pos.x,y=player.pos.y}
      bullet.d={x=player.d.x,y=player.d.y}
    end
  end
  
  -- move any active bullet
  if bullet.active then
    bullet.v=v_mults(bullet.d, bullet.speed)
    bullet.pos=v_addv(bullet.pos, bullet.v)
    -- if the bullet's now off
    -- screen, disable it
    if not onscreen(bullet.pos) then
      bullet.active=false
    end
  end
  
  -- update critters
  for c in all(critters) do
    if c.alive and not c.escaped then
      -- move living critters
      local t=v_mults(c.d, c.speed)
      c.pos=v_addv(c.pos, t)
      if not onscreen(c.pos) then
        c.escaped=true
      else
        if bullet.active then
          if collide(bullet, c) then
            c.alive=false
            bullet.active=false
          end
        end
      end
    elseif c.alive and c.escaped then
      -- todo: replace the critter
    elseif not c.alive then
      -- todo: drumstick
    end
  end
end


function _draw()
  cls()
 
  -- draw the forest map
  map(0,0, 0,0, 15,15)

  -- set green to be the
  -- transparent color and
  -- black to be opaque.
  palt(0, false)
  palt(3, true)

  -- animate the player based
  -- on their direction and
  -- whether they're moving
  ph=v_heading(player.d)
  if player.v.x!=0 or player.v.y!=0 then
    -- player is moving
    player.anim=player.anims.move[ph]
  else
    -- player is idle
    player.anim=player.anims.idle[ph]
  end    
  anim(player)
  
  -- animate any critters
  for c in all(critters) do
    if c.alive and not c.escaped then
      c.anim=c.anims.move.l
      anim(c)
    elseif not c.alive then
      c.anim=c.anims.dead
      anim(c)
    end
    if(debug_mode) print(c.name.." alive="..tostr(c.alive).." escaped="..tostr(c.escaped))
  end
  
  -- reset transparency.
  palt()
  
  -- draw the bullet
  if bullet.active then
    bullet.anim=bullet.anims.l
    anim(bullet)
  end
  
  --v_print(player.pos, "player.pos")
  --v_print(player.d, "player.d")
end

function make_critters(n)
  local critters={}
  for i=1,n do
    local ci=flr(rnd(#all_critters))+1
    critter=all_critters[ci]()
    critter.alive=true
    critter.escaped=false
    critter.pos={x=127,y=rnd(127)}
    critter.d={x=-1,y=0}
    critters[i+1]=critter
  end
  return critters
end

-->8
-- utils

-- animates an object which has
-- a pos point and an anim
-- object with these fields:
--
-- f: start frame
-- l: animation length
-- s: speed
-- h: horiz. flip?
function anim(o)
  if(not o.a_ct) o.a_ct=0
  if(not o.a_st) o.a_st=0

  o.a_ct+=1

  if(o.a_ct%(30/o.anim.s)==0) then
    o.a_st+=1
  end
  if (o.a_st>=o.anim.l) o.a_st=0

  o.a_fr=o.anim.f+o.a_st
  spr(o.a_fr,o.pos.x,o.pos.y,1,1,o.anim.h)
end

function collide(a, b)
  if
    b.pos.x+b.hitbox.x+b.hitbox.w > a.pos.x+a.hitbox.x and 
    b.pos.y+b.hitbox.y+b.hitbox.h > a.pos.y+a.hitbox.y and
    b.pos.x+b.hitbox.x < a.pos.x+a.hitbox.x+a.hitbox.w and
    b.pos.y+b.hitbox.y < a.pos.y+a.hitbox.y+a.hitbox.h 
  then
    return true
  end
end

-- compute magnitude of v
function v_mag(v)
  return sqrt((v.x * v.x) + (v.y * v.y))
end

-- normalizes v into a unit vector
function v_norm( v )
  local len = v_mag( v )
  return { x = v.x / len, y = v.y / len }
end

-- add v1 to v2
function v_addv( v1, v2 )
  return { x = v1.x + v2.x, y = v1.y + v2.y }
end

-- multiply v by scalar n
function v_mults( v, n )
  return { x = v.x * n, y = v.y * n }
end

function v_print(v, l)
  print(l..": x="..v.x..",y="..v.y)
end

function v_heading(v)
  if(v.x==1 and v.y==0) return d_e
  if(v.x==1 and v.y==-1) return d_ne
  if(v.x==0 and v.y==-1) return d_n
  if(v.x==-1 and v.y==-1) return d_nw
  if(v.x==-1 and v.y==0) return d_w
  if(v.x==-1 and v.y==1) return d_sw
  if(v.x==0 and v.y==1) return d_s
  if(v.x==1 and v.y==1) return d_se
end

function onscreen(v)
  return v.x>=0 and v.x<=127
     and v.y>=0 and v.y<=127
end
__gfx__
000000003322333333223333332233333332233333322333000000003333333333333333b3333333000000000000000000000000000000000000000000000000
000000003322233333223333332233333332233333322333000000003333333333333333333b33b3000000000000000000000000000000000000000000000000
00700700332f33333322533333225333333ff333333ff33300000000333333333334443333b33333000000000000000000000000000000000000000000000000
00077000339945553399433333994333339993333399933300000000333333333344444333333333000000000000000000000000000000000000000000000000
00077000339fff333399f3333399f333334993333349933300000000333333333334343333333333000000000005600000000000000000000000000000000000
0070070033103333331133333311333333511333335113330000000033333333333333333b3333b3000000000000000000000000000000000000000000000000
000000003310333333103333330133333331033333301333000000003333333333333333333b3333000000000000000000000000000000000000000000000000
0000000033d5533333d53333335d3333333d53333335d3330000000033333333333333333333333b000000000000000000000000000000000000000000000000
00000000332233333322333333223333332233330000000000000000333333333333333333333333000000003333d33333333633333333630000000000000000
00000000332223333322233333222333332223330000000000000000333333333333333333333333000000003633333333363333333333330000000000000000
00000000332f3333332f3333332f3333332f3333000000000000000033336633333333333333333300000000333336333333333333d333330000000000000000
00000000339945553399455533994555339945550000000000000000333ddd333333d333333333330000000033333333333d3333333336330000000000000000
00000000339fff33339fff33339fff33339fff33000000000000000033ddd563333d153dd6333333000000003444337334443373344433730000000000000000
000000003301333333103333331133333310333300000000000000003355555333dd115111633333000000003444443334444433344444330000000000000000
000000003d1133333310333335013333331033330000000000000000333333333361cccccc163333000000003444337334443373344433730000000000000000
000000003d35533333dd5333353dd33333dd53330000000000000000333333333361cccb3cc15333000000003333333333333333333333330000000000000000
00000000333333333333333333333333333333330000000000000000333333333361ccc3bcc15333000000003333333333333333333333333333333300000000
000000003333333333333333333333333333333300000000000000003333333333d1ccccccc15333000000003333333333333333333333333333333300000000
000000003343333333433333334333333343333300000000000000003333333333d1cccccc111533000000003333333333333333333333333333333300000000
0000000038433373384333733843337338433373000000000000000033bbb33333d1ccccc1515333000000003336333333363333333633333336333300000000
000000003344447333444473334444733344447300000000000000003bb4bb33333511c11d353333000000003363333333633733336337333363373300000000
000000003344443333444433334444333344443300000000000000003b222b333333551dd3333333000000003336d33333366653333666333336666300000000
00000000334324333343442333442433334324430000000000000000333333333333335333333333000000003366673333653333333365333356333300000000
00000000330310333303031333301033330313030000000000000000333333333333333333333333000000003333333333333333333333333333333300000000
00000000333333333333333333333333333333330000000000000000000000000000000000000000000000003333333333333333333333333333333300000000
00000000333433333334333333343333333433330000000000000000000000000000000000000000000000003333333333333333333333333333333300000000
00000000334443333344433333387333337833330000000000000000000000000000000000000000000000003336363333353533333636333333333300000000
000000003347433333474333334443333344433300000000000000000000000000000000000000000000000033367633333676333336d6333336d63300000000
0000000033474333334743333344433333444333000000000000000000000000000000000000000000000000333d6d33333d6d33333d6d33333d6d3300000000
00000000334523333325433333432333332343330000000000000000000000000000000000000000000000003336d6333336d633333676333336763300000000
00000000330313333313033333031333331303330000000000000000000000000000000000000000000000003336363333333333333636333335353300000000
00000000333333333333333333333333333333330000000000000000000000000000000000000000000000003333333333333333333333333333333300000000
__map__
070707070707070707070707070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707070707070707070707070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707090717070707070907070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707070707070707070707070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707070707070907070707071707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
071707070707070707070707070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707072707070707072707090907070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
070707070707090709070707070707070a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
072707070709090707090707170727070a0a1a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07070907070707070707070907070707250a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707071707181907070707070725000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707282907070707070725000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707090707072707070707270707070725000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070717070707070707070707070725000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707170707070725250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0727070707070727070707070707070700250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000270002700027000270002700034000270002700027000260002500024000220002100020000000001f0001f000000001e000000001e0001e000000001f0000000020000220002300025000
